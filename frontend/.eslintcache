[{"F:\\Code\\shopPro\\frontend\\src\\index.js":"1","F:\\Code\\shopPro\\frontend\\src\\App.js":"2","F:\\Code\\shopPro\\frontend\\src\\reportWebVitals.js":"3","F:\\Code\\shopPro\\frontend\\src\\components\\Header.js":"4","F:\\Code\\shopPro\\frontend\\src\\components\\Footer.js":"5","F:\\Code\\shopPro\\frontend\\src\\screens\\HomeScreen.js":"6","F:\\Code\\shopPro\\frontend\\src\\components\\Product.js":"7","F:\\Code\\shopPro\\frontend\\src\\components\\Rating.js":"8","F:\\Code\\shopPro\\frontend\\src\\screens\\ProductScreen.js":"9","F:\\Code\\shopPro\\frontend\\src\\store.js":"10","F:\\Code\\shopPro\\frontend\\src\\reducers\\productReducers.js":"11","F:\\Code\\shopPro\\frontend\\src\\constants\\productConstants.js":"12","F:\\Code\\shopPro\\frontend\\src\\actions\\productActions.js":"13","F:\\Code\\shopPro\\frontend\\src\\components\\Loader.js":"14","F:\\Code\\shopPro\\frontend\\src\\components\\Message.js":"15","F:\\Code\\shopPro\\frontend\\src\\screens\\CartScreen.js":"16","F:\\Code\\shopPro\\frontend\\src\\reducers\\cartReducers.js":"17","F:\\Code\\shopPro\\frontend\\src\\actions\\cartActions.js":"18","F:\\Code\\shopPro\\frontend\\src\\constants\\cartConstants.js":"19","F:\\Code\\shopPro\\frontend\\src\\reducers\\userReducers.js":"20","F:\\Code\\shopPro\\frontend\\src\\constants\\userConstants.js":"21","F:\\Code\\shopPro\\frontend\\src\\screens\\LoginScreen.js":"22","F:\\Code\\shopPro\\frontend\\src\\components\\FormContainer.js":"23","F:\\Code\\shopPro\\frontend\\src\\actions\\userActions.js":"24","F:\\Code\\shopPro\\frontend\\src\\screens\\RegisterScreen.js":"25","F:\\Code\\shopPro\\frontend\\src\\screens\\ProfileScreen.js":"26","F:\\Code\\shopPro\\frontend\\src\\screens\\ShippingScreen.js":"27","F:\\Code\\shopPro\\frontend\\src\\components\\CheckoutSteps.js":"28","F:\\Code\\shopPro\\frontend\\src\\screens\\PaymentScreen.js":"29","F:\\Code\\shopPro\\frontend\\src\\screens\\PlaceOrderScreen.js":"30","F:\\Code\\shopPro\\frontend\\src\\reducers\\orderReducers.js":"31","F:\\Code\\shopPro\\frontend\\src\\constants\\orderConstants.js":"32","F:\\Code\\shopPro\\frontend\\src\\actions\\orderActions.js":"33","F:\\Code\\shopPro\\frontend\\src\\screens\\OrderScreen.js":"34","F:\\Code\\shopPro\\frontend\\src\\components\\MessageSuccess.js":"35","F:\\Code\\shopPro\\frontend\\src\\components\\Announcement.js":"36"},{"size":596,"mtime":1611681056363,"results":"37","hashOfConfig":"38"},{"size":1631,"mtime":1613704868438,"results":"39","hashOfConfig":"38"},{"size":362,"mtime":499162500000,"results":"40","hashOfConfig":"38"},{"size":2471,"mtime":1612095014308,"results":"41","hashOfConfig":"38"},{"size":356,"mtime":1611459654848,"results":"42","hashOfConfig":"38"},{"size":1204,"mtime":1611930980189,"results":"43","hashOfConfig":"38"},{"size":1362,"mtime":1611844911750,"results":"44","hashOfConfig":"38"},{"size":1802,"mtime":1611471571179,"results":"45","hashOfConfig":"38"},{"size":4082,"mtime":1612079593403,"results":"46","hashOfConfig":"38"},{"size":1837,"mtime":1614154515536,"results":"47","hashOfConfig":"38"},{"size":1029,"mtime":1611727990691,"results":"48","hashOfConfig":"38"},{"size":366,"mtime":1611727675083,"results":"49","hashOfConfig":"38"},{"size":1211,"mtime":1611728269093,"results":"50","hashOfConfig":"38"},{"size":432,"mtime":1611736745998,"results":"51","hashOfConfig":"38"},{"size":818,"mtime":1613751664778,"results":"52","hashOfConfig":"38"},{"size":5395,"mtime":1612080515041,"results":"53","hashOfConfig":"38"},{"size":1184,"mtime":1612540819436,"results":"54","hashOfConfig":"38"},{"size":1255,"mtime":1612540754776,"results":"55","hashOfConfig":"38"},{"size":238,"mtime":1612540677571,"results":"56","hashOfConfig":"38"},{"size":2051,"mtime":1614160838488,"results":"57","hashOfConfig":"38"},{"size":906,"mtime":1614160770665,"results":"58","hashOfConfig":"38"},{"size":2343,"mtime":1612088379243,"results":"59","hashOfConfig":"38"},{"size":402,"mtime":1612087628650,"results":"60","hashOfConfig":"38"},{"size":3713,"mtime":1614161074047,"results":"61","hashOfConfig":"38"},{"size":3411,"mtime":1612152938478,"results":"62","hashOfConfig":"38"},{"size":7933,"mtime":1614160292572,"results":"63","hashOfConfig":"38"},{"size":2562,"mtime":1612538225632,"results":"64","hashOfConfig":"38"},{"size":1643,"mtime":1612593111433,"results":"65","hashOfConfig":"38"},{"size":1810,"mtime":1612591918167,"results":"66","hashOfConfig":"38"},{"size":6184,"mtime":1613705080748,"results":"67","hashOfConfig":"38"},{"size":2311,"mtime":1614160731470,"results":"68","hashOfConfig":"38"},{"size":802,"mtime":1614160689795,"results":"69","hashOfConfig":"38"},{"size":3307,"mtime":1614154966550,"results":"70","hashOfConfig":"38"},{"size":8027,"mtime":1614150710292,"results":"71","hashOfConfig":"38"},{"size":904,"mtime":1613751692128,"results":"72","hashOfConfig":"38"},{"size":263,"mtime":1613712470178,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"1shtzj8",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"76"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"76"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"76"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"76"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"76"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"76"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"76"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"153"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"F:\\Code\\shopPro\\frontend\\src\\index.js",[],["156","157"],"F:\\Code\\shopPro\\frontend\\src\\App.js",[],"F:\\Code\\shopPro\\frontend\\src\\reportWebVitals.js",[],"F:\\Code\\shopPro\\frontend\\src\\components\\Header.js",[],"F:\\Code\\shopPro\\frontend\\src\\components\\Footer.js",[],"F:\\Code\\shopPro\\frontend\\src\\screens\\HomeScreen.js",[],"F:\\Code\\shopPro\\frontend\\src\\components\\Product.js",[],"F:\\Code\\shopPro\\frontend\\src\\components\\Rating.js",[],"F:\\Code\\shopPro\\frontend\\src\\screens\\ProductScreen.js",["158"],"import React, { useEffect, useState } from 'react'\r\nimport { Button, Card, Col, Form, Image, ListGroup, Row } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { listProductDetails } from '../actions/productActions.js'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Rating from '../components/Rating'\r\n\r\nProductScreen.propTypes = {}\r\n\r\nfunction ProductScreen({ history, match }) {\r\n  const [qty, setQty] = useState(1)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const productDetails = useSelector((state) => state.productDetails)\r\n  const { loading, error, product } = productDetails\r\n\r\n  useEffect(() => {\r\n    dispatch(listProductDetails(match.params.id))\r\n  }, [dispatch, match])\r\n\r\n  const addToCartHandler = () => {\r\n    history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Link className='btn btn-light my-3' to='/'>\r\n        <i class='fas fa-arrow-left pr-2'></i>\r\n        Go back\r\n      </Link>\r\n\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Row className='container-productGreen'>\r\n          <Col md={5} className='p-0 img-productGreen'>\r\n            <Image src={product.image} alt={product.name} fluid />\r\n          </Col>\r\n\r\n          <Col md={7} className='text-left p-1'>\r\n            <Row className='pl-4 pr-2'>\r\n              <ListGroup variant='flush' className='pr-3'>\r\n                <ListGroup.Item className='border-0 pb-0'>\r\n                  <strong>\r\n                    <h5>{product.name}</h5>\r\n                  </strong>\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item className='border-0 pb-0'>\r\n                  <Rating\r\n                    value={product.rating}\r\n                    text={`(${product.numReviews} reviews)`}\r\n                  />\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item className='text-justify'>\r\n                  Description: {product.description}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n\r\n              <ListGroup variant='flush' className='border-0 pt-0'>\r\n                <div className='group-items p-1 ml-4'>\r\n                  <ListGroup.Item className='border-0 pt-0 pb-0 mb-0 group-items'>\r\n                    <h2>${product.price}</h2>\r\n                  </ListGroup.Item>\r\n\r\n                  <ListGroup.Item className='border-0 group-items'>\r\n                    Status:{' '}\r\n                    {product.countInStock > 0 ? 'In Stock' : <b className='danger'>Out of Stock</b>}\r\n                  </ListGroup.Item>\r\n\r\n                  {product.countInStock > 0 && (\r\n                    <ListGroup.Item className='border-0 pt-0 pb-0 group-items'>\r\n                      <Row>\r\n                        <Col md={3}>Qty:</Col>\r\n                        <Col md={4}>\r\n                          <Form.Control\r\n                            className='text-center'\r\n                            type='number'\r\n                            size='sm'\r\n                            min='0'\r\n                            defaultValue='1'\r\n                            onChange={(e) => setQty(e.target.value)}\r\n                          ></Form.Control>\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  )}\r\n                </div>\r\n\r\n                <ListGroup.Item className='ml-4 pl-0 pr-0'>\r\n                  <Button\r\n                    onClick={addToCartHandler}\r\n                    className='btn-block btn-danger'\r\n                    type='button'\r\n                    disabled={product.countInStock === 0}\r\n                    style={{ fontSize: '1em' }}\r\n                  >\r\n                    <strong>Add to Cart</strong>\r\n                  </Button>\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductScreen\r\n","F:\\Code\\shopPro\\frontend\\src\\store.js",[],"F:\\Code\\shopPro\\frontend\\src\\reducers\\productReducers.js",[],"F:\\Code\\shopPro\\frontend\\src\\constants\\productConstants.js",[],"F:\\Code\\shopPro\\frontend\\src\\actions\\productActions.js",[],"F:\\Code\\shopPro\\frontend\\src\\components\\Loader.js",[],"F:\\Code\\shopPro\\frontend\\src\\components\\Message.js",["159","160"],"import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\nimport '../toast.css'\r\nimport { ToastContainer, toast } from 'react-toastify'\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline'\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline'\r\n\r\nMessage.propTypes = {}\r\n\r\nfunction Message({ variant, children }) {\r\n  toast.error(\r\n    <div>\r\n      <ErrorOutlineIcon className='pr-1' fontSize='large' /> {children}\r\n    </div>,\r\n    {\r\n      position: 'top-right',\r\n      autoClose: 2500,\r\n      hideProgressBar: true,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    }\r\n  )\r\n\r\n  return (\r\n    <ToastContainer></ToastContainer>\r\n  )\r\n}\r\n\r\nMessage.defaultProps = {\r\n  variant: 'info',\r\n}\r\n\r\nexport default Message\r\n","F:\\Code\\shopPro\\frontend\\src\\screens\\CartScreen.js",["161","162"],"import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport { Link } from 'react-router-dom'\r\nimport {\r\n  Button,\r\n  Card,\r\n  Col,\r\n  Form,\r\n  Alert,\r\n  Image,\r\n  ListGroup,\r\n  Row,\r\n} from 'react-bootstrap'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions.js'\r\n\r\nexport const CartScreen = ({ match, location, history }) => {\r\n  const productId = match.params.id\r\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const cart = useSelector((state) => state.cart)\r\n  const { cartItems } = cart\r\n\r\n  console.log(cartItems)\r\n\r\n  useEffect(() => {\r\n    if (productId) {\r\n      dispatch(addToCart(productId, qty))\r\n    }\r\n  }, [dispatch, productId, qty])\r\n\r\n  const removeFromCartHandler = (id) => {\r\n    dispatch(removeFromCart(id))\r\n  }\r\n\r\n  const checkoutHandler = () => {\r\n    history.push('/login?redirect=shipping')\r\n  }\r\n\r\n  const test = (e) => {\r\n    const value = e.target.value\r\n    if (parseInt(value) === 0) {\r\n      alert('sai')\r\n    }\r\n    console.log(value)\r\n  }\r\n\r\n  return (\r\n    <Col>\r\n      <Link className='btn btn-light my-3' to='/'>\r\n        <i class='fas fa-arrow-left pr-2'></i>\r\n        Go back\r\n      </Link>\r\n      <h3>Shopping Cart</h3>\r\n      <Row>\r\n        <Col md={9} className='p-0 pr-4 '>\r\n          {cartItems.length === 0 ? (\r\n            <Message>\r\n              Your cart is empty <Link to='/'>Go back</Link>\r\n            </Message>\r\n          ) : (\r\n            <ListGroup variant='flush' className=''>\r\n              {cartItems.map((item) => (\r\n                <ListGroup.Item\r\n                  key={item.product}\r\n                  className='border-0 mt-2 shadow '\r\n                  rounded\r\n                >\r\n                  <h6>\r\n                    NSX <i class='fas fa-angle-right'></i>\r\n                  </h6>\r\n                  <Row>\r\n                    <Col md={3}>\r\n                      <Link\r\n                        to={`/product/${item.product}`}\r\n                        className='text-decoration-none product-card-green'\r\n                      >\r\n                        <Image src={item.image} alt={item.name} fluid />\r\n                      </Link>\r\n                    </Col>\r\n\r\n                    <Col md={4}>\r\n                      <Link\r\n                        to={`/product/${item.product}`}\r\n                        className='text-decoration-none'\r\n                      >\r\n                        <p style={{ color: '#343a40' }}>{item.name}</p>\r\n                      </Link>\r\n                    </Col>\r\n\r\n                    <Col md={2} className='pt-2'>\r\n                      <h6>${item.price}</h6>\r\n                    </Col>\r\n\r\n                    <Col md={2}>\r\n                      <Form.Control\r\n                        className='text-center'\r\n                        type='number'\r\n                        size='sm'\r\n                        min='0'\r\n                        defaultValue='1'\r\n                        onChange={(e) =>\r\n                          Number(e.target.value) !== 0\r\n                            ? dispatch(\r\n                                addToCart(item.product, Number(e.target.value))\r\n                              )\r\n                            : () => removeFromCartHandler(item.product)\r\n                        }\r\n                      ></Form.Control>\r\n                    </Col>\r\n\r\n                    <Col md={1}>\r\n                      <Button\r\n                        type='button'\r\n                        variant='light'\r\n                        onClick={() => removeFromCartHandler(item.product)}\r\n                      >\r\n                        <i className='fas fa-trash'></i>\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n              ))}\r\n            </ListGroup>\r\n          )}\r\n        </Col>\r\n\r\n        <Col md={3} className='p-0'>\r\n          <Card className='border-0 shadow mt-2'>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item className='d-flex justify-content-around '>\r\n                <div>\r\n                  <p className='title-bill'>Subtotal: </p>\r\n                  <p className='title-bill'>Price: </p>\r\n                </div>\r\n                <div>\r\n                  <h6 className='title-bill-value'>\r\n                    {cartItems.reduce((acc, item) => acc + item.qty, 0)} items\r\n                  </h6>\r\n                  <h6 className='title-bill-value'>\r\n                    $\r\n                    {cartItems\r\n                      .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n                      .toFixed(2)}\r\n                  </h6>\r\n                </div>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n          <Card className='mt-3 border-0 btn-proceed'>\r\n            <Button\r\n              type='button'\r\n              className='btn-block btn-danger text-uppercase p-2'\r\n              disabled={cartItems === 0}\r\n              onClick={checkoutHandler}\r\n              size='sm'\r\n              style={{ fontFamily: 'Montserrat', fontSize: '0.78em' }}\r\n            >\r\n              Proceed To Checkout\r\n            </Button>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Col>\r\n  )\r\n}\r\n\r\nexport default CartScreen\r\n","F:\\Code\\shopPro\\frontend\\src\\reducers\\cartReducers.js",[],"F:\\Code\\shopPro\\frontend\\src\\actions\\cartActions.js",[],"F:\\Code\\shopPro\\frontend\\src\\constants\\cartConstants.js",[],"F:\\Code\\shopPro\\frontend\\src\\reducers\\userReducers.js",[],"F:\\Code\\shopPro\\frontend\\src\\constants\\userConstants.js",[],"F:\\Code\\shopPro\\frontend\\src\\screens\\LoginScreen.js",[],"F:\\Code\\shopPro\\frontend\\src\\components\\FormContainer.js",[],"F:\\Code\\shopPro\\frontend\\src\\actions\\userActions.js",[],"F:\\Code\\shopPro\\frontend\\src\\screens\\RegisterScreen.js",["163"],"import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userActions'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { SnackbarProvider } from 'notistack'\r\n\r\nRegisterScreen.propTypes = {}\r\n\r\nfunction RegisterScreen({ location, history }) {\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userRegister = useSelector((state) => state.userRegister)\r\n  const { loading, error, userInfo } = userRegister\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/'\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if (password !== confirmPassword) {\r\n      setMessage('Password do not match')\r\n    } else {\r\n      dispatch(register(name, email, password))\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect)\r\n    }\r\n  }, [history, userInfo, redirect])\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h2>Sign up</h2>\r\n      {message && <Message variant='danger'>{message}</Message>}\r\n      {error && <Message variant='danger'>{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='name'>\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            type='name'\r\n            placeholder='Enter name'\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='email'>\r\n          <Form.Label>Email address</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Enter email'\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='password'>\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Enter password'\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='password'>\r\n          <Form.Label>Confirm Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Enter Confirm Password'\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='success'>\r\n          Register\r\n        </Button>\r\n\r\n        <Row className='py-3 '>\r\n          <Col>\r\n            Have an Account?{' '}\r\n            <Link\r\n              className='text-decoration-none text-dark'\r\n              to={redirect ? `/login?redirect=${redirect}` : '/login'}\r\n            >\r\n              <strong>Login</strong>\r\n            </Link>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default RegisterScreen\r\n","F:\\Code\\shopPro\\frontend\\src\\screens\\ProfileScreen.js",["164","165","166","167","168","169","170","171","172","173","174"],"F:\\Code\\shopPro\\frontend\\src\\screens\\ShippingScreen.js",[],"F:\\Code\\shopPro\\frontend\\src\\components\\CheckoutSteps.js",[],"F:\\Code\\shopPro\\frontend\\src\\screens\\PaymentScreen.js",["175"],"import React, { useState } from 'react'\r\nimport { Button, Form, Col, Image } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport FormContainer from '../components/FormContainer'\r\n\r\nexport const PaymentScreen = ({ history }) => {\r\n  const cart = useSelector((state) => state.cart)\r\n  const { shippingAddress } = cart\r\n\r\n  if (!shippingAddress.address) {\r\n    history.push('/shipping')\r\n  }\r\n\r\n  const [paymentMethod, setPaymentMethod] = useState('Paypal')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(savePaymentMethod(paymentMethod))\r\n    history.push('./placeorder')\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 step3 />\r\n      <h3>Payment Method</h3>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group>\r\n          <Form.Label as='legend'>Select Method</Form.Label>\r\n\r\n          <Col>\r\n            <Form.Check\r\n              type='radio'\r\n              label='PayPal or Credit Card'\r\n              id='PayPal'\r\n              value='PayPal'\r\n              name='paymentMethod'\r\n              checked\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            ></Form.Check>\r\n            \r\n            <Form.Check\r\n              type='radio'\r\n              label='Stripe'\r\n              id='Stripe'\r\n              value='Stripe'\r\n              name='paymentMethod'\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            ></Form.Check>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='danger'>\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  )\r\n}\r\n","F:\\Code\\shopPro\\frontend\\src\\screens\\PlaceOrderScreen.js",["176","177","178"],"import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { createOrder } from '../actions/orderActions'\r\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\r\nimport { USER_DETAILS_RESET } from '../constants/userConstants'\r\n\r\nPlaceOrderScreen.propTypes = {}\r\n\r\nfunction PlaceOrderScreen({ history }) {\r\n  const dispatch = useDispatch()\r\n\r\n  const cart = useSelector((state) => state.cart)\r\n\r\n  // Calculate prices\r\n  cart.itemsPrice = cart.cartItems.reduce(\r\n    (acc, item) => acc + item.price + item.qty,\r\n    0\r\n  )\r\n\r\n  const addDecimals = (num) => {\r\n    return (Math.round(num * 100) / 100).toFixed(2)\r\n  }\r\n\r\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100)\r\n  cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)))\r\n  cart.totalPrice = (\r\n    Number(cart.itemsPrice) +\r\n    Number(cart.shippingPrice) +\r\n    Number(cart.taxPrice)\r\n  ).toFixed(2)\r\n\r\n  const orderCreate = useSelector((state) => state.orderCreate)\r\n  const { order, success, error } = orderCreate\r\n\r\n  const placeOrderHandler = () => {\r\n    dispatch(\r\n      createOrder({\r\n        orderItems: cart.cartItems,\r\n        shippingAddress: cart.shippingAddress,\r\n        paymentMethod: cart.paymentMethod,\r\n        itemsPrice: cart.itemsPrice,\r\n        shippingPrice: cart.shippingPrice,\r\n        taxPrice: cart.taxPrice,\r\n        totalPrice: cart.totalPrice,\r\n      })\r\n    )\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      history.push(`/order/${order._id}`)\r\n    }\r\n  }, [history, success])\r\n\r\n  return (\r\n    <>\r\n      <Row className='justify-content-center'>\r\n        <CheckoutSteps\r\n          step1\r\n          step2\r\n          step3\r\n          step4\r\n          className='justify-content-center'\r\n        />\r\n        <Col md={7} className='ml-3 mr-3 pl-0 pr-0 mt-2'>\r\n          <ListGroup variant='flush' className='shadow'>\r\n            <ListGroup.Item className='border-0'>\r\n              <h5 className='text-uppercase'>Shiping</h5>\r\n              <p className='mb-1'>\r\n                <strong>Address: </strong>\r\n                {cart.shippingAddress.address}, {cart.shippingAddress.city},{' '}\r\n                {cart.shippingAddress.postalCode},{' '}\r\n                {cart.shippingAddress.country},\r\n              </p>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item className='border-0'>\r\n              <h5 className='text-uppercase'>Payment Method</h5>\r\n              <strong>Method: </strong>\r\n              {cart.paymentMethod}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h5 className='text-uppercase'>Order Items</h5>\r\n              {cart.cartItems.length === 0 ? (\r\n                <Message>Your cart is empty</Message>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {cart.cartItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={2}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n\r\n                        <Col>\r\n                          <Link\r\n                            to={`/product/${item.product}`}\r\n                            className='link-product'\r\n                          >\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n\r\n                        <Col md={4}>\r\n                          <b>\r\n                            {item.qty} x ${item.price} = $\r\n                            {item.qty * item.price}\r\n                          </b>\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card className='shadow mt-2'>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h4 className='text-uppercase text-center'>Order Summary</h4>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>\r\n                    <strong>${cart.itemsPrice}</strong>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>\r\n                    <strong>${cart.shippingPrice}</strong>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>\r\n                    <strong>${cart.taxPrice}</strong>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>\r\n                    <strong>${cart.totalPrice}</strong>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Button\r\n                  type='button'\r\n                  className='btn-block btn-dark text-uppercase btn-apply'\r\n                  disabled={cart.cartItems === 0}\r\n                  onClick={placeOrderHandler}\r\n                >\r\n                  <strong>Place Order</strong>\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","F:\\Code\\shopPro\\frontend\\src\\reducers\\orderReducers.js",[],"F:\\Code\\shopPro\\frontend\\src\\constants\\orderConstants.js",[],"F:\\Code\\shopPro\\frontend\\src\\actions\\orderActions.js",[],"F:\\Code\\shopPro\\frontend\\src\\screens\\OrderScreen.js",["179"],"import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Card, Col, Image, ListGroup, Row } from 'react-bootstrap'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport '../../src/notisfied.css'\r\nimport { getOrderDetails, payOrder } from '../actions/orderActions'\r\nimport Announcement from '../components/Announcement'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport {\r\n  ORDER_PAY_RESET\r\n} from '../constants/orderConstants'\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n  const orderId = match.params.id\r\n\r\n  const [sdkReady, setSdkReady] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails)\r\n  const { order, loading, error } = orderDetails\r\n\r\n  const orderPay = useSelector((state) => state.orderPay)\r\n  const { loading: loadingPay, success: successPay } = orderPay\r\n\r\n  // const orderDeliver = useSelector((state) => state.orderDeliver)\r\n  // const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  if (!loading) {\r\n    //   Calculate prices\r\n    const addDecimals = (num) => {\r\n      return (Math.round(num * 100) / 100).toFixed(2)\r\n    }\r\n\r\n    order.itemsPrice = addDecimals(\r\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    )\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login')\r\n    }\r\n\r\n    const addPayPalScript = async () => {\r\n      const { data: clientId } = await axios.get('/api/config/paypal')\r\n      const script = document.createElement('script')\r\n      script.type = 'text/javascript'\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n      script.async = true\r\n      script.onload = () => {\r\n        setSdkReady(true)\r\n      }\r\n      document.body.appendChild(script)\r\n    }\r\n\r\n    if (!order || successPay ) {\r\n      dispatch({ type: ORDER_PAY_RESET })\r\n      // dispatch({ type: ORDER_DELIVER_RESET })\r\n      dispatch(getOrderDetails(orderId))\r\n    } else if (!order.isPaid) {\r\n      if (!window.paypal) {\r\n        addPayPalScript()\r\n      } else {\r\n        setSdkReady(true)\r\n      }\r\n    }\r\n  }, [dispatch, orderId, successPay, order])\r\n\r\n  const successPaymentHandler = (paymentResult) => {\r\n    console.log(paymentResult)\r\n    dispatch(payOrder(orderId, paymentResult))\r\n  }\r\n\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message>{error}</Message>\r\n  ) : (\r\n    <>\r\n      <h2>Order {order._id}</h2>\r\n      <Row className='justify-content-center'>\r\n        <Col md={7} className='ml-3 mr-3 pl-0 pr-0 mt-2'>\r\n          <ListGroup variant='flush' className='shadow'>\r\n            <ListGroup.Item>\r\n              <h5 className='text-uppercase'>Shiping</h5>\r\n              <p>\r\n                <strong>Name: </strong> {order.user.name}\r\n              </p>\r\n              <p>\r\n                <strong>Email: </strong>\r\n                <a\r\n                  className='link-product'\r\n                  href={`mailto: ${order.user.email}`}\r\n                >\r\n                  {order.user.email}\r\n                </a>\r\n              </p>\r\n\r\n              <p className='mb-3'>\r\n                <strong>Address: </strong>\r\n                {order.shippingAddress.address}, {order.shippingAddress.city},{' '}\r\n                {order.shippingAddress.postalCode},{' '}\r\n                {order.shippingAddress.country},\r\n              </p>\r\n\r\n              {order.isDelivered ? (\r\n                <Announcement variant='success'>\r\n                  Delivered on {order.DeliveredAt}\r\n                </Announcement>\r\n              ) : (\r\n                <Announcement variant='danger'>No Delivered</Announcement>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h5 className='text-uppercase'>Payment Method</h5>\r\n              <p>\r\n                <strong>Method: </strong>\r\n                {order.paymentMethod}\r\n              </p>\r\n\r\n              {order.isPaid ? (\r\n                <Announcement variant='success'>\r\n                  Paid on {order.paidAt}\r\n                </Announcement>\r\n              ) : (\r\n                <Announcement variant='danger'>No Paid</Announcement>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h5 className='text-uppercase'>Order Items</h5>\r\n              {order.orderItems.length === 0 ? (\r\n                <Message>Order is empty</Message>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {order.orderItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={2}>\r\n                          <Link\r\n                            to={`/product/${item.product}`}\r\n                            className='link-product'\r\n                          >\r\n                            <Image\r\n                              src={item.image}\r\n                              alt={item.name}\r\n                              fluid\r\n                              rounded\r\n                            />\r\n                          </Link>\r\n                        </Col>\r\n\r\n                        <Col>\r\n                          <Link\r\n                            to={`/product/${item.product}`}\r\n                            className='link-product'\r\n                          >\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n\r\n                        <Col md={4}>\r\n                          <b>\r\n                            {item.qty} x ${item.price} = $\r\n                            {item.qty * item.price}\r\n                          </b>\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card className='shadow mt-2'>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h4 className='text-uppercase text-center'>Order Summary</h4>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>\r\n                    <strong>${order.itemsPrice}</strong>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>\r\n                    <strong>${order.shippingPrice}</strong>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>\r\n                    <strong>${order.taxPrice}</strong>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>\r\n                    <strong>${order.totalPrice}</strong>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              {!order.isPaid && (\r\n                <ListGroup.Item>\r\n                  {loadingPay && <Loader />}\r\n                  {!sdkReady ? (\r\n                    <Loader />\r\n                  ) : (\r\n                    <PayPalButton\r\n                      amount={order.totalPrice}\r\n                      onSuccess={successPaymentHandler}\r\n                    />\r\n                  )}\r\n                </ListGroup.Item>\r\n              )}\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OrderScreen\r\n","F:\\Code\\shopPro\\frontend\\src\\components\\MessageSuccess.js",["180","181"],"import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\nimport '../toast.css'\r\nimport { ToastContainer, toast } from 'react-toastify'\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline'\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline'\r\n\r\nMessageSuccess.propTypes = {}\r\n\r\nfunction MessageSuccess({ variant, children }) {\r\n  toast.success(\r\n    <div>\r\n      <CheckCircleOutlineIcon className='pr-1' fontSize='large' />\r\n      {variant}\r\n    </div>,\r\n    {\r\n      className: 'Toastify__toast--success',\r\n      position: 'top-right',\r\n      autoClose: 2500,\r\n      hideProgressBar: true,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    }\r\n  )\r\n  return (\r\n    <ToastContainer></ToastContainer>\r\n  )\r\n}\r\n\r\nMessageSuccess.defaultProps = {\r\n  variant: 'info',\r\n}\r\n\r\nexport default MessageSuccess\r\n",["182","183"],"F:\\Code\\shopPro\\frontend\\src\\components\\Announcement.js",[],{"ruleId":"184","replacedBy":"185"},{"ruleId":"186","replacedBy":"187"},{"ruleId":"188","severity":1,"message":"189","line":2,"column":18,"nodeType":"190","messageId":"191","endLine":2,"endColumn":22},{"ruleId":"188","severity":1,"message":"192","line":2,"column":10,"nodeType":"190","messageId":"191","endLine":2,"endColumn":15},{"ruleId":"188","severity":1,"message":"193","line":6,"column":8,"nodeType":"190","messageId":"191","endLine":6,"endColumn":30},{"ruleId":"188","severity":1,"message":"192","line":10,"column":3,"nodeType":"190","messageId":"191","endLine":10,"endColumn":8},{"ruleId":"188","severity":1,"message":"194","line":42,"column":9,"nodeType":"190","messageId":"191","endLine":42,"endColumn":13},{"ruleId":"188","severity":1,"message":"195","line":9,"column":10,"nodeType":"190","messageId":"191","endLine":9,"endColumn":26},{"ruleId":"188","severity":1,"message":"196","line":1,"column":10,"nodeType":"190","messageId":"191","endLine":1,"endColumn":13},{"ruleId":"188","severity":1,"message":"197","line":13,"column":10,"nodeType":"190","messageId":"191","endLine":13,"endColumn":14},{"ruleId":"188","severity":1,"message":"198","line":16,"column":3,"nodeType":"190","messageId":"191","endLine":16,"endColumn":11},{"ruleId":"188","severity":1,"message":"199","line":17,"column":3,"nodeType":"190","messageId":"191","endLine":17,"endColumn":8},{"ruleId":"188","severity":1,"message":"200","line":21,"column":8,"nodeType":"190","messageId":"191","endLine":21,"endColumn":21},{"ruleId":"188","severity":1,"message":"201","line":23,"column":8,"nodeType":"190","messageId":"191","endLine":23,"endColumn":15},{"ruleId":"188","severity":1,"message":"202","line":26,"column":8,"nodeType":"190","messageId":"191","endLine":26,"endColumn":17},{"ruleId":"188","severity":1,"message":"203","line":29,"column":10,"nodeType":"190","messageId":"191","endLine":29,"endColumn":21},{"ruleId":"188","severity":1,"message":"204","line":40,"column":10,"nodeType":"190","messageId":"191","endLine":40,"endColumn":17},{"ruleId":"188","severity":1,"message":"205","line":40,"column":19,"nodeType":"190","messageId":"191","endLine":40,"endColumn":29},{"ruleId":"188","severity":1,"message":"206","line":51,"column":11,"nodeType":"190","messageId":"191","endLine":51,"endColumn":18},{"ruleId":"188","severity":1,"message":"207","line":2,"column":29,"nodeType":"190","messageId":"191","endLine":2,"endColumn":34},{"ruleId":"188","severity":1,"message":"208","line":8,"column":10,"nodeType":"190","messageId":"191","endLine":8,"endColumn":28},{"ruleId":"188","severity":1,"message":"209","line":9,"column":10,"nodeType":"190","messageId":"191","endLine":9,"endColumn":28},{"ruleId":"210","severity":1,"message":"211","line":57,"column":6,"nodeType":"212","endLine":57,"endColumn":24,"suggestions":"213"},{"ruleId":"210","severity":1,"message":"214","line":74,"column":6,"nodeType":"212","endLine":74,"endColumn":44,"suggestions":"215"},{"ruleId":"188","severity":1,"message":"192","line":2,"column":10,"nodeType":"190","messageId":"191","endLine":2,"endColumn":15},{"ruleId":"188","severity":1,"message":"216","line":5,"column":8,"nodeType":"190","messageId":"191","endLine":5,"endColumn":24},{"ruleId":"184","replacedBy":"217"},{"ruleId":"186","replacedBy":"218"},"no-native-reassign",["219"],"no-negated-in-lhs",["220"],"no-unused-vars","'Card' is defined but never used.","Identifier","unusedVar","'Alert' is defined but never used.","'CheckCircleOutlineIcon' is defined but never used.","'test' is assigned a value but never used.","'SnackbarProvider' is defined but never used.","'set' is defined but never used.","'Link' is defined but never used.","'register' is defined but never used.","'login' is defined but never used.","'FormContainer' is defined but never used.","'Message' is defined but never used.","'ErrorIcon' is defined but never used.","'useSnackbar' is defined but never used.","'message' is assigned a value but never used.","'setMessage' is assigned a value but never used.","'success' is assigned a value but never used.","'Image' is defined but never used.","'ORDER_CREATE_RESET' is defined but never used.","'USER_DETAILS_RESET' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'order._id'. Either include it or remove the dependency array.","ArrayExpression",["221"],"React Hook useEffect has missing dependencies: 'history' and 'userInfo'. Either include them or remove the dependency array.",["222"],"'ErrorOutlineIcon' is defined but never used.",["219"],["220"],"no-global-assign","no-unsafe-negation",{"desc":"223","fix":"224"},{"desc":"225","fix":"226"},"Update the dependencies array to be: [history, order._id, success]",{"range":"227","text":"228"},"Update the dependencies array to be: [dispatch, orderId, successPay, order, userInfo, history]",{"range":"229","text":"230"},[1765,1783],"[history, order._id, success]",[2387,2425],"[dispatch, orderId, successPay, order, userInfo, history]"]