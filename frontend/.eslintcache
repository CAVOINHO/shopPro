[{"F:\\Code\\shopPro\\frontend\\src\\index.js":"1","F:\\Code\\shopPro\\frontend\\src\\App.js":"2","F:\\Code\\shopPro\\frontend\\src\\reportWebVitals.js":"3","F:\\Code\\shopPro\\frontend\\src\\components\\Header.js":"4","F:\\Code\\shopPro\\frontend\\src\\components\\Footer.js":"5","F:\\Code\\shopPro\\frontend\\src\\screens\\HomeScreen.js":"6","F:\\Code\\shopPro\\frontend\\src\\components\\Product.js":"7","F:\\Code\\shopPro\\frontend\\src\\components\\Rating.js":"8","F:\\Code\\shopPro\\frontend\\src\\screens\\ProductScreen.js":"9","F:\\Code\\shopPro\\frontend\\src\\store.js":"10","F:\\Code\\shopPro\\frontend\\src\\reducers\\productReducers.js":"11","F:\\Code\\shopPro\\frontend\\src\\constants\\productConstants.js":"12","F:\\Code\\shopPro\\frontend\\src\\actions\\productActions.js":"13","F:\\Code\\shopPro\\frontend\\src\\components\\Loader.js":"14","F:\\Code\\shopPro\\frontend\\src\\components\\Message.js":"15","F:\\Code\\shopPro\\frontend\\src\\screens\\CartScreen.js":"16","F:\\Code\\shopPro\\frontend\\src\\reducers\\cartReducers.js":"17","F:\\Code\\shopPro\\frontend\\src\\actions\\cartActions.js":"18","F:\\Code\\shopPro\\frontend\\src\\constants\\cartConstants.js":"19","F:\\Code\\shopPro\\frontend\\src\\reducers\\userReducers.js":"20","F:\\Code\\shopPro\\frontend\\src\\constants\\userConstants.js":"21","F:\\Code\\shopPro\\frontend\\src\\screens\\LoginScreen.js":"22","F:\\Code\\shopPro\\frontend\\src\\components\\FormContainer.js":"23","F:\\Code\\shopPro\\frontend\\src\\actions\\userActions.js":"24","F:\\Code\\shopPro\\frontend\\src\\screens\\RegisterScreen.js":"25","F:\\Code\\shopPro\\frontend\\src\\screens\\ProfileScreen.js":"26","F:\\Code\\shopPro\\frontend\\src\\screens\\ShippingScreen.js":"27","F:\\Code\\shopPro\\frontend\\src\\components\\CheckoutSteps.js":"28","F:\\Code\\shopPro\\frontend\\src\\screens\\PaymentScreen.js":"29","F:\\Code\\shopPro\\frontend\\src\\screens\\PlaceOrderScreen.js":"30"},{"size":596,"mtime":1611681056363,"results":"31","hashOfConfig":"32"},{"size":1512,"mtime":1612592251182,"results":"33","hashOfConfig":"32"},{"size":362,"mtime":499162500000,"results":"34","hashOfConfig":"32"},{"size":2471,"mtime":1612095014308,"results":"35","hashOfConfig":"32"},{"size":356,"mtime":1611459654848,"results":"36","hashOfConfig":"32"},{"size":1204,"mtime":1611930980189,"results":"37","hashOfConfig":"32"},{"size":1362,"mtime":1611844911750,"results":"38","hashOfConfig":"32"},{"size":1802,"mtime":1611471571179,"results":"39","hashOfConfig":"32"},{"size":4082,"mtime":1612079593403,"results":"40","hashOfConfig":"32"},{"size":1563,"mtime":1612496558633,"results":"41","hashOfConfig":"32"},{"size":1029,"mtime":1611727990691,"results":"42","hashOfConfig":"32"},{"size":366,"mtime":1611727675083,"results":"43","hashOfConfig":"32"},{"size":1211,"mtime":1611728269093,"results":"44","hashOfConfig":"32"},{"size":432,"mtime":1611736745998,"results":"45","hashOfConfig":"32"},{"size":273,"mtime":1611727219832,"results":"46","hashOfConfig":"32"},{"size":5395,"mtime":1612080515041,"results":"47","hashOfConfig":"32"},{"size":1184,"mtime":1612540819436,"results":"48","hashOfConfig":"32"},{"size":1255,"mtime":1612540754776,"results":"49","hashOfConfig":"32"},{"size":238,"mtime":1612540677571,"results":"50","hashOfConfig":"32"},{"size":1971,"mtime":1612164041387,"results":"51","hashOfConfig":"32"},{"size":850,"mtime":1612163355471,"results":"52","hashOfConfig":"32"},{"size":2343,"mtime":1612088379243,"results":"53","hashOfConfig":"32"},{"size":402,"mtime":1612087628650,"results":"54","hashOfConfig":"32"},{"size":3539,"mtime":1612164824896,"results":"55","hashOfConfig":"32"},{"size":3411,"mtime":1612152938478,"results":"56","hashOfConfig":"32"},{"size":5164,"mtime":1612492759186,"results":"57","hashOfConfig":"32"},{"size":2562,"mtime":1612538225632,"results":"58","hashOfConfig":"32"},{"size":1643,"mtime":1612593111433,"results":"59","hashOfConfig":"32"},{"size":1810,"mtime":1612591918167,"results":"60","hashOfConfig":"32"},{"size":5446,"mtime":1612628429379,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1shtzj8",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"64"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"64"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"64"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"F:\\Code\\shopPro\\frontend\\src\\index.js",[],["127","128"],"F:\\Code\\shopPro\\frontend\\src\\App.js",[],"F:\\Code\\shopPro\\frontend\\src\\reportWebVitals.js",[],"F:\\Code\\shopPro\\frontend\\src\\components\\Header.js",[],"F:\\Code\\shopPro\\frontend\\src\\components\\Footer.js",[],"F:\\Code\\shopPro\\frontend\\src\\screens\\HomeScreen.js",[],"F:\\Code\\shopPro\\frontend\\src\\components\\Product.js",[],"F:\\Code\\shopPro\\frontend\\src\\components\\Rating.js",[],"F:\\Code\\shopPro\\frontend\\src\\screens\\ProductScreen.js",["129"],"import React, { useEffect, useState } from 'react'\r\nimport { Button, Card, Col, Form, Image, ListGroup, Row } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { listProductDetails } from '../actions/productActions.js'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Rating from '../components/Rating'\r\n\r\nProductScreen.propTypes = {}\r\n\r\nfunction ProductScreen({ history, match }) {\r\n  const [qty, setQty] = useState(1)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const productDetails = useSelector((state) => state.productDetails)\r\n  const { loading, error, product } = productDetails\r\n\r\n  useEffect(() => {\r\n    dispatch(listProductDetails(match.params.id))\r\n  }, [dispatch, match])\r\n\r\n  const addToCartHandler = () => {\r\n    history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Link className='btn btn-light my-3' to='/'>\r\n        <i class='fas fa-arrow-left pr-2'></i>\r\n        Go back\r\n      </Link>\r\n\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Row className='container-productGreen'>\r\n          <Col md={5} className='p-0 img-productGreen'>\r\n            <Image src={product.image} alt={product.name} fluid />\r\n          </Col>\r\n\r\n          <Col md={7} className='text-left p-1'>\r\n            <Row className='pl-4 pr-2'>\r\n              <ListGroup variant='flush' className='pr-3'>\r\n                <ListGroup.Item className='border-0 pb-0'>\r\n                  <strong>\r\n                    <h5>{product.name}</h5>\r\n                  </strong>\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item className='border-0 pb-0'>\r\n                  <Rating\r\n                    value={product.rating}\r\n                    text={`(${product.numReviews} reviews)`}\r\n                  />\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item className='text-justify'>\r\n                  Description: {product.description}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n\r\n              <ListGroup variant='flush' className='border-0 pt-0'>\r\n                <div className='group-items p-1 ml-4'>\r\n                  <ListGroup.Item className='border-0 pt-0 pb-0 mb-0 group-items'>\r\n                    <h2>${product.price}</h2>\r\n                  </ListGroup.Item>\r\n\r\n                  <ListGroup.Item className='border-0 group-items'>\r\n                    Status:{' '}\r\n                    {product.countInStock > 0 ? 'In Stock' : <b className='danger'>Out of Stock</b>}\r\n                  </ListGroup.Item>\r\n\r\n                  {product.countInStock > 0 && (\r\n                    <ListGroup.Item className='border-0 pt-0 pb-0 group-items'>\r\n                      <Row>\r\n                        <Col md={3}>Qty:</Col>\r\n                        <Col md={4}>\r\n                          <Form.Control\r\n                            className='text-center'\r\n                            type='number'\r\n                            size='sm'\r\n                            min='0'\r\n                            defaultValue='1'\r\n                            onChange={(e) => setQty(e.target.value)}\r\n                          ></Form.Control>\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  )}\r\n                </div>\r\n\r\n                <ListGroup.Item className='ml-4 pl-0 pr-0'>\r\n                  <Button\r\n                    onClick={addToCartHandler}\r\n                    className='btn-block btn-danger'\r\n                    type='button'\r\n                    disabled={product.countInStock === 0}\r\n                    style={{ fontSize: '1em' }}\r\n                  >\r\n                    <strong>Add to Cart</strong>\r\n                  </Button>\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductScreen\r\n","F:\\Code\\shopPro\\frontend\\src\\store.js",[],"F:\\Code\\shopPro\\frontend\\src\\reducers\\productReducers.js",[],"F:\\Code\\shopPro\\frontend\\src\\constants\\productConstants.js",[],"F:\\Code\\shopPro\\frontend\\src\\actions\\productActions.js",[],"F:\\Code\\shopPro\\frontend\\src\\components\\Loader.js",[],"F:\\Code\\shopPro\\frontend\\src\\components\\Message.js",[],"F:\\Code\\shopPro\\frontend\\src\\screens\\CartScreen.js",["130","131"],"import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport { Link } from 'react-router-dom'\r\nimport {\r\n  Button,\r\n  Card,\r\n  Col,\r\n  Form,\r\n  Alert,\r\n  Image,\r\n  ListGroup,\r\n  Row,\r\n} from 'react-bootstrap'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions.js'\r\n\r\nexport const CartScreen = ({ match, location, history }) => {\r\n  const productId = match.params.id\r\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const cart = useSelector((state) => state.cart)\r\n  const { cartItems } = cart\r\n\r\n  console.log(cartItems)\r\n\r\n  useEffect(() => {\r\n    if (productId) {\r\n      dispatch(addToCart(productId, qty))\r\n    }\r\n  }, [dispatch, productId, qty])\r\n\r\n  const removeFromCartHandler = (id) => {\r\n    dispatch(removeFromCart(id))\r\n  }\r\n\r\n  const checkoutHandler = () => {\r\n    history.push('/login?redirect=shipping')\r\n  }\r\n\r\n  const test = (e) => {\r\n    const value = e.target.value\r\n    if (parseInt(value) === 0) {\r\n      alert('sai')\r\n    }\r\n    console.log(value)\r\n  }\r\n\r\n  return (\r\n    <Col>\r\n      <Link className='btn btn-light my-3' to='/'>\r\n        <i class='fas fa-arrow-left pr-2'></i>\r\n        Go back\r\n      </Link>\r\n      <h3>Shopping Cart</h3>\r\n      <Row>\r\n        <Col md={9} className='p-0 pr-4 '>\r\n          {cartItems.length === 0 ? (\r\n            <Message>\r\n              Your cart is empty <Link to='/'>Go back</Link>\r\n            </Message>\r\n          ) : (\r\n            <ListGroup variant='flush' className=''>\r\n              {cartItems.map((item) => (\r\n                <ListGroup.Item\r\n                  key={item.product}\r\n                  className='border-0 mt-2 shadow '\r\n                  rounded\r\n                >\r\n                  <h6>\r\n                    NSX <i class='fas fa-angle-right'></i>\r\n                  </h6>\r\n                  <Row>\r\n                    <Col md={3}>\r\n                      <Link\r\n                        to={`/product/${item.product}`}\r\n                        className='text-decoration-none product-card-green'\r\n                      >\r\n                        <Image src={item.image} alt={item.name} fluid />\r\n                      </Link>\r\n                    </Col>\r\n\r\n                    <Col md={4}>\r\n                      <Link\r\n                        to={`/product/${item.product}`}\r\n                        className='text-decoration-none'\r\n                      >\r\n                        <p style={{ color: '#343a40' }}>{item.name}</p>\r\n                      </Link>\r\n                    </Col>\r\n\r\n                    <Col md={2} className='pt-2'>\r\n                      <h6>${item.price}</h6>\r\n                    </Col>\r\n\r\n                    <Col md={2}>\r\n                      <Form.Control\r\n                        className='text-center'\r\n                        type='number'\r\n                        size='sm'\r\n                        min='0'\r\n                        defaultValue='1'\r\n                        onChange={(e) =>\r\n                          Number(e.target.value) !== 0\r\n                            ? dispatch(\r\n                                addToCart(item.product, Number(e.target.value))\r\n                              )\r\n                            : () => removeFromCartHandler(item.product)\r\n                        }\r\n                      ></Form.Control>\r\n                    </Col>\r\n\r\n                    <Col md={1}>\r\n                      <Button\r\n                        type='button'\r\n                        variant='light'\r\n                        onClick={() => removeFromCartHandler(item.product)}\r\n                      >\r\n                        <i className='fas fa-trash'></i>\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n              ))}\r\n            </ListGroup>\r\n          )}\r\n        </Col>\r\n\r\n        <Col md={3} className='p-0'>\r\n          <Card className='border-0 shadow mt-2'>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item className='d-flex justify-content-around '>\r\n                <div>\r\n                  <p className='title-bill'>Subtotal: </p>\r\n                  <p className='title-bill'>Price: </p>\r\n                </div>\r\n                <div>\r\n                  <h6 className='title-bill-value'>\r\n                    {cartItems.reduce((acc, item) => acc + item.qty, 0)} items\r\n                  </h6>\r\n                  <h6 className='title-bill-value'>\r\n                    $\r\n                    {cartItems\r\n                      .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n                      .toFixed(2)}\r\n                  </h6>\r\n                </div>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n          <Card className='mt-3 border-0 btn-proceed'>\r\n            <Button\r\n              type='button'\r\n              className='btn-block btn-danger text-uppercase p-2'\r\n              disabled={cartItems === 0}\r\n              onClick={checkoutHandler}\r\n              size='sm'\r\n              style={{ fontFamily: 'Montserrat', fontSize: '0.78em' }}\r\n            >\r\n              Proceed To Checkout\r\n            </Button>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Col>\r\n  )\r\n}\r\n\r\nexport default CartScreen\r\n","F:\\Code\\shopPro\\frontend\\src\\reducers\\cartReducers.js",[],"F:\\Code\\shopPro\\frontend\\src\\actions\\cartActions.js",[],"F:\\Code\\shopPro\\frontend\\src\\constants\\cartConstants.js",[],"F:\\Code\\shopPro\\frontend\\src\\reducers\\userReducers.js",[],"F:\\Code\\shopPro\\frontend\\src\\constants\\userConstants.js",[],"F:\\Code\\shopPro\\frontend\\src\\screens\\LoginScreen.js",[],"F:\\Code\\shopPro\\frontend\\src\\components\\FormContainer.js",[],"F:\\Code\\shopPro\\frontend\\src\\actions\\userActions.js",[],"F:\\Code\\shopPro\\frontend\\src\\screens\\RegisterScreen.js",["132"],"import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userActions'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { SnackbarProvider } from 'notistack'\r\n\r\nRegisterScreen.propTypes = {}\r\n\r\nfunction RegisterScreen({ location, history }) {\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userRegister = useSelector((state) => state.userRegister)\r\n  const { loading, error, userInfo } = userRegister\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/'\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if (password !== confirmPassword) {\r\n      setMessage('Password do not match')\r\n    } else {\r\n      dispatch(register(name, email, password))\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect)\r\n    }\r\n  }, [history, userInfo, redirect])\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h2>Sign up</h2>\r\n      {message && <Message variant='danger'>{message}</Message>}\r\n      {error && <Message variant='danger'>{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='name'>\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            type='name'\r\n            placeholder='Enter name'\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='email'>\r\n          <Form.Label>Email address</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Enter email'\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='password'>\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Enter password'\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='password'>\r\n          <Form.Label>Confirm Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Enter Confirm Password'\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='success'>\r\n          Register\r\n        </Button>\r\n\r\n        <Row className='py-3 '>\r\n          <Col>\r\n            Have an Account?{' '}\r\n            <Link\r\n              className='text-decoration-none text-dark'\r\n              to={redirect ? `/login?redirect=${redirect}` : '/login'}\r\n            >\r\n              <strong>Login</strong>\r\n            </Link>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default RegisterScreen\r\n","F:\\Code\\shopPro\\frontend\\src\\screens\\ProfileScreen.js",["133","134","135","136","137","138","139","140","141","142","143"],"import { set } from 'mongoose'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Button, Col, Form, Row } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport {\r\n  register,\r\n  login,\r\n  getUserDetails,\r\n  updateUserProfile,\r\n} from '../actions/userActions'\r\nimport FormContainer from '../components/FormContainer'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { ToastContainer, toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport ErrorIcon from '@material-ui/icons/Error'\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline'\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline'\r\nimport { useSnackbar } from 'notistack'\r\nimport '../toast.css'\r\nProfileScreen.propTypes = {}\r\n\r\nfunction ProfileScreen({ location, history }) {\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userDetails = useSelector((state) => state.userDetails)\r\n  const { loading, error, user } = userDetails\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile)\r\n  const { success } = userUpdateProfile\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    error && toast.error(\r\n      <div>\r\n        <ErrorOutlineIcon className='pr-1' fontSize='large' /> {error}\r\n      </div>,\r\n      {\r\n        position: 'top-right',\r\n        autoClose: 2500,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      }\r\n    )\r\n\r\n    if (password !== confirmPassword) {\r\n      toast.error(\r\n        <div>\r\n          <ErrorOutlineIcon className='pr-1' fontSize='large' /> Password is not\r\n          match\r\n        </div>,\r\n        {\r\n          position: 'top-right',\r\n          autoClose: 2500,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        }\r\n      )\r\n    } else {\r\n      dispatch(updateUserProfile({ id: user._id, email, name, password }))\r\n      toast.success(\r\n        <div>\r\n          <CheckCircleOutlineIcon className='pr-1' fontSize='large' />\r\n          Profile Updated\r\n        </div>,\r\n        {\r\n          className: 'Toastify__toast--success',\r\n          position: 'top-right',\r\n          autoClose: 2500,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push()\r\n    } else {\r\n      if (!user.name) {\r\n        dispatch(getUserDetails('profile'))\r\n      } else {\r\n        setName(user.name)\r\n        setEmail(user.email)\r\n      }\r\n    }\r\n  }, [dispatch, history, userInfo, user])\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={4}>\r\n        <h2>User Profile</h2>\r\n        {/* {message && <Message variant='danger'>{message}</Message>}\r\n        {error && <Message variant='danger'>{error}</Message>} */}\r\n        {loading && <Loader />}\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId='name'>\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              type='name'\r\n              placeholder='Enter name'\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='email'>\r\n            <Form.Label>Email address</Form.Label>\r\n            <Form.Control\r\n              type='email'\r\n              placeholder='Enter email'\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='password'>\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type='password'\r\n              placeholder='Enter password'\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='password'>\r\n            <Form.Label>Confirm Password</Form.Label>\r\n            <Form.Control\r\n              type='password'\r\n              placeholder='Enter Confirm Password'\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Button type='submit' variant='success'>\r\n            Update\r\n          </Button>\r\n          <ToastContainer />\r\n        </Form>\r\n      </Col>\r\n      <Col md={8}>\r\n        <h2>My Order</h2>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default ProfileScreen\r\n","F:\\Code\\shopPro\\frontend\\src\\screens\\ShippingScreen.js",[],"F:\\Code\\shopPro\\frontend\\src\\components\\CheckoutSteps.js",[],"F:\\Code\\shopPro\\frontend\\src\\screens\\PaymentScreen.js",["144"],"F:\\Code\\shopPro\\frontend\\src\\screens\\PlaceOrderScreen.js",["145","146"],{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","severity":1,"message":"152","line":2,"column":18,"nodeType":"153","messageId":"154","endLine":2,"endColumn":22},{"ruleId":"151","severity":1,"message":"155","line":10,"column":3,"nodeType":"153","messageId":"154","endLine":10,"endColumn":8},{"ruleId":"151","severity":1,"message":"156","line":42,"column":9,"nodeType":"153","messageId":"154","endLine":42,"endColumn":13},{"ruleId":"151","severity":1,"message":"157","line":9,"column":10,"nodeType":"153","messageId":"154","endLine":9,"endColumn":26},{"ruleId":"151","severity":1,"message":"158","line":1,"column":10,"nodeType":"153","messageId":"154","endLine":1,"endColumn":13},{"ruleId":"151","severity":1,"message":"159","line":5,"column":10,"nodeType":"153","messageId":"154","endLine":5,"endColumn":14},{"ruleId":"151","severity":1,"message":"160","line":7,"column":3,"nodeType":"153","messageId":"154","endLine":7,"endColumn":11},{"ruleId":"151","severity":1,"message":"161","line":8,"column":3,"nodeType":"153","messageId":"154","endLine":8,"endColumn":8},{"ruleId":"151","severity":1,"message":"162","line":12,"column":8,"nodeType":"153","messageId":"154","endLine":12,"endColumn":21},{"ruleId":"151","severity":1,"message":"163","line":14,"column":8,"nodeType":"153","messageId":"154","endLine":14,"endColumn":15},{"ruleId":"151","severity":1,"message":"164","line":17,"column":8,"nodeType":"153","messageId":"154","endLine":17,"endColumn":17},{"ruleId":"151","severity":1,"message":"165","line":20,"column":10,"nodeType":"153","messageId":"154","endLine":20,"endColumn":21},{"ruleId":"151","severity":1,"message":"166","line":29,"column":10,"nodeType":"153","messageId":"154","endLine":29,"endColumn":17},{"ruleId":"151","severity":1,"message":"167","line":29,"column":19,"nodeType":"153","messageId":"154","endLine":29,"endColumn":29},{"ruleId":"151","severity":1,"message":"168","line":40,"column":11,"nodeType":"153","messageId":"154","endLine":40,"endColumn":18},{"ruleId":"151","severity":1,"message":"169","line":2,"column":29,"nodeType":"153","messageId":"154","endLine":2,"endColumn":34},{"ruleId":"151","severity":1,"message":"170","line":1,"column":17,"nodeType":"153","messageId":"154","endLine":1,"endColumn":26},{"ruleId":"151","severity":1,"message":"171","line":4,"column":10,"nodeType":"153","messageId":"154","endLine":4,"endColumn":21},"no-native-reassign",["172"],"no-negated-in-lhs",["173"],"no-unused-vars","'Card' is defined but never used.","Identifier","unusedVar","'Alert' is defined but never used.","'test' is assigned a value but never used.","'SnackbarProvider' is defined but never used.","'set' is defined but never used.","'Link' is defined but never used.","'register' is defined but never used.","'login' is defined but never used.","'FormContainer' is defined but never used.","'Message' is defined but never used.","'ErrorIcon' is defined but never used.","'useSnackbar' is defined but never used.","'message' is assigned a value but never used.","'setMessage' is assigned a value but never used.","'success' is assigned a value but never used.","'Image' is defined but never used.","'useEffect' is defined but never used.","'useDispatch' is defined but never used.","no-global-assign","no-unsafe-negation"]